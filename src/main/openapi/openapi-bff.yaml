---
openapi: 3.0.3
info:
  title: onecx-workspace-bff
  description: OneCx workspace Bff
  version: "1.0"
servers:
  - url: http://onecx-workspace-bff:8080/
tags:
  - name: workspace
  - name: menuItem
  - name: product
paths:
  /workspaces:
    post:
      x-onecx:
        permissions:
          workspaces:
            - write
      tags:
        - workspace
      description: Create new workspace
      operationId: createWorkspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkspaceResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/search:
    post:
      x-onecx:
        permissions:
          workspaces:
            - read
      tags:
        - workspace
      description: Search workspaces by criteria
      operationId: searchWorkspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchWorkspacesRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchWorkspacesResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/{id}:
    get:
      x-onecx:
        permissions:
          workspaces:
            - read
      tags:
        - workspace
      description: Get workspace by id
      operationId: getWorkspaceById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkspaceResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    put:
      x-onecx:
        permissions:
          workspaces:
            - write
      tags:
        - workspace
      description: Update workspace
      operationId: updateWorkspace
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceRequest'
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Not found
    delete:
      x-onecx:
        permissions:
          workspaces:
            - delete
      tags:
        - workspace
      description: Delete workspace
      operationId: deleteWorkspace
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/name/{workspaceName}:
    get:
      x-onecx:
        permissions:
          workspaces:
            - read
      tags:
        - workspace
      description: Get workspace by name
      operationId: getWorkspaceByName
      parameters:
        - $ref: '#/components/parameters/workspaceName'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkspaceResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/themes:
    get:
      x-onecx:
        permissions:
          workspaces:
            - read
      tags:
        - workspace
      description: get all theme names
      operationId: getAllThemes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'

  /workspaces/menu/{workspaceName}/menuItems:
    get:
      x-onecx:
        permissions:
          workspaces:
            - read
      tags:
        - menuItem
      description: Find all menu items belonging to a workspace
      operationId: getMenuItemsForWorkspaceByName
      parameters:
        - $ref: '#/components/parameters/workspaceName'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMenuItemsResponse'
        "404":
          description: Not found
    patch:
      x-onecx:
        permissions:
          workspaces:
            - write
      tags:
        - menuItem
      description: Update menu Items
      operationId: updateMenuItem
      parameters:
        - $ref: '#/components/parameters/workspaceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMenuItemRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Menu items not found
    post:
      x-onecx:
        permissions:
          workspaces:
            - write
      tags:
        - menuItem
      description: Add a new menu item to workspace menu
      operationId: createMenuItemForWorkspace
      parameters:
        - $ref: '#/components/parameters/workspaceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMenuItemRequest'
      responses:
        "201":
          description: OK
          headers:
            Location:
              required: true
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMenuItemResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/menu/{workspaceName}/menuItems/tree:
    get:
      x-onecx:
        permissions:
          workspaces:
            - read
      tags:
        - menuItem
      description: Fetch the menuItems of the workspace in the tree structure
      operationId: getMenuStructureForWorkspaceName
      parameters:
        - $ref: '#/components/parameters/workspaceName'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkspaceMenuItemStructureResponse'
        "404":
          description: Not found
  /workspaces/menu/{workspaceName}/menuItems/tree/upload:
    post:
      x-onecx:
        permissions:
          workspaces:
            - write
      tags:
        - menuItem
      description: Upload the menu structure for workspace
      operationId: uploadMenuStructureForWorkspaceName
      parameters:
        - $ref: '#/components/parameters/workspaceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceMenuItemStructureRequest'
      responses:
        "201":
          description: New Menu structure created
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/menu/{workspaceName}/menuItems/{menuItemId}:
    get:
      x-onecx:
        permissions:
          workspaces:
            - read
      tags:
        - menuItem
      description: Retrieve menu item detail info
      operationId: getMenuItemById
      parameters:
        - $ref: '#/components/parameters/workspaceName'
        - $ref: '#/components/parameters/menuItemId'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMenuItemResponse'
        "404":
          description: Not found
    delete:
      x-onecx:
        permissions:
          workspaces:
            - delete
      tags:
        - menuItem
      description: Delete a menuItem by the workspace name and the menuItemId
      operationId: deleteMenuItemById
      parameters:
        - $ref: '#/components/parameters/workspaceName'
        - $ref: '#/components/parameters/menuItemId'
      responses:
        "204":
          description: OK
        "400":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'

  /workspaces/{id}/products:
    post:
      x-onecx:
        permissions:
          workspaces:
            - write
      tags:
        - product
      description: Create/Register new product to workspace
      operationId: createProductInWorkspace
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        "201":
          description: Product added
          headers:
            Location:
              required: true
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateProductResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    get:
      x-onecx:
        permissions:
          workspaces:
            - read
      tags:
        - product
      description: Find all products belonging to a workspace
      operationId: getProductsForWorkspaceId
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsResponse'
        "404":
          description: Not found
  /workspaces/{id}/products/{productId}:
    delete:
      x-onecx:
        permissions:
          workspaces:
            - delete
      tags:
        - product
      description: Delete a product by the workspace id and the productId
      operationId: deleteProductById
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/productId'
      responses:
        "204":
          description: OK
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    put:
      x-onecx:
        permissions:
          workspaces:
            - write
      tags:
        - product
      description: Update product and MFEs
      operationId: updateProductById
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/productId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateProductResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Product not found
  /workspaces/export:
    x-onecx:
      permissions:
        workspaces:
          - read
    post:
      tags:
        - workspace
      description: Export workspaces
      operationId: exportWorkspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportWorkspacesRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSnapshot'
        "404":
          description: No themes founds
  /workspaces/import:
    x-onecx:
      permissions:
        workspaces:
          - write
    post:
      tags:
        - workspace
      description: Import workspaces
      operationId: importWorkspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceSnapshot'
      responses:
        "200":
          description: Import result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportWorkspaceResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/menu/{workspaceName}/export:
    get:
      x-onecx:
        permissions:
          workspaces:
            - read
      tags:
        - menuItem
      description: Export workspaces
      operationId: exportMenuByWorkspaceName
      parameters:
        - $ref: '#/components/parameters/workspaceName'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuSnapshot'
        "404":
          description: No themes founds

  /workspaces/menu/{workspaceName}/import:
    post:
      x-onecx:
        permissions:
          workspaces:
            - write
      tags:
        - menuItem
      description: Import workspaces
      operationId: importMenuByWorkspaceName
      parameters:
        - $ref: '#/components/parameters/workspaceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuSnapshot'
      responses:
        "200":
          description: Import result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMenuResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
components:
  schemas:
    Workspace:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          readOnly: true
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
          readOnly: true
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
        theme:
          type: string
        homePage:
          type: string
        baseUrl:
          type: string
        companyName:
          type: string
        phoneNumber:
          type: string
        rssFeedUrl:
          type: string
        footerLabel:
          type: string
        logoUrl:
          type: string
        workspaceRoles:
          type: array
          uniqueItems: true
          items:
            type: string
        address:
          $ref: '#/components/schemas/WorkspaceAddress'
        subjectLinks:
          uniqueItems: true
          maxItems: 3
          type: array
          items:
            $ref: '#/components/schemas/SubjectLink'
        imageUrls:
          uniqueItems: true
          type: array
          items:
            type: string
    WorkspaceAbstract:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        theme:
          type: string
        baseUrl:
          type: string
        logoUrl:
          type: string
    WorkspaceAddress:
      type: object
      properties:
        street:
          type: string
        streetNo:
          type: string
        city:
          type: string
        country:
          type: string
        postalCode:
          type: string
    SubjectLink:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
    CreateWorkspaceRequest:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Workspace'
    CreateWorkspaceResponse:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Workspace'
    SearchWorkspacesRequest:
      type: object
      properties:
        name:
          type: string
        themeName:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 10
          type: integer
    SearchWorkspacesResponse:
      allOf:
        - $ref: '#/components/schemas/PagingResponse'
        - type: object
          properties:
            stream:
              type: array
              items:
                $ref: '#/components/schemas/WorkspaceAbstract'
    GetWorkspaceResponse:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Workspace'
    UpdateWorkspaceRequest:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Workspace'
    MenuItem:
      type: object
      required:
        - id
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        workspaceName:
          type: string
        applicationId:
          type: string
        disabled:
          type: boolean
        position:
          format: int32
          type: integer
        permission:
          type: string
        badge:
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
        workspaceExit:
          type: boolean
        parentItemId:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
        i18n:
          type: object
          additionalProperties:
            type: string
    CreateUpdateMenuItem:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        workspaceName:
          type: string
          readOnly: true
        applicationId:
          type: string
          readOnly: true
        disabled:
          type: boolean
        position:
          format: int32
          type: integer
        permission:
          type: string
        badge:
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
        workspaceExit:
          type: boolean
        parentItemId:
          type: string
        i18n:
          type: object
          additionalProperties:
            type: string
    GetMenuItemsResponse: #holds array
      type: object
      properties:
        menuItems:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
    CreateMenuItemRequest:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/CreateUpdateMenuItem'
    CreateMenuItemResponse:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/MenuItem'
    UpdateMenuItemRequest:
      type: object
      required:
        - resource
      properties:
        resource:
          $ref: '#/components/schemas/MenuItem'
    GetWorkspaceMenuItemStructureResponse:
      type: object
      properties:
        menuItems:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
    CreateWorkspaceMenuItemStructureRequest:
      type: object
      properties:
        menuItems:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
    GetMenuItemResponse:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/MenuItem'
    Product:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        productName:
          type: string
        baseUrl:
          type: string
        microfrontends:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Microfrontend'
    Microfrontend:
      type: object
      properties:
        id:
          type: string
        mfeId:
          type: string
        basePath:
          type: string
    CreateProductRequest:
      required:
        - productName
        - baseUrl
      type: object
      properties:
        productName:
          type: string
        baseUrl:
          type: string
        microfrontends:
          type: array
          items:
            $ref: '#/components/schemas/CreateUpdateMicrofrontend'
    CreateUpdateMicrofrontend:
      required:
        - mfeId
        - basePath
      type: object
      properties:
        mfeId:
          type: string
        basePath:
          type: string
    CreateUpdateProductResponse:
      required:
        - resource
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/Product'
    GetProductsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    UpdateProductRequest:
      required:
        - baseUrl
        - modificationCount
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        baseUrl:
          type: string
        microfrontends:
          type: array
          items:
            $ref: '#/components/schemas/CreateUpdateMicrofrontend'
    WorkspaceSnapshot:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        workspaces:
          type: object
          nullable: false
          additionalProperties:
            $ref: '#/components/schemas/EximWorkspace'
    ImportMenuResponse:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        status:
          $ref: '#/components/schemas/ImportResponseStatus'
    ImportWorkspaceResponse:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        workspaces:
          additionalProperties:
            $ref: '#/components/schemas/ImportResponseStatus'
        menus:
          additionalProperties:
            $ref: '#/components/schemas/ImportResponseStatus'
    ImportResponseStatus:
      type: string
      enum:
        - UPDATED
        - CREATED
        - SKIPPED
        - ERROR
    EximWorkspace:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        theme:
          type: string
        homePage:
          type: string
        baseUrl:
          type: string
        companyName:
          type: string
        phoneNumber:
          type: string
        rssFeedUrl:
          type: string
        footerLabel:
          type: string
        logoUrl:
          type: string
        address:
          $ref: '#/components/schemas/EximWorkspaceAddress'
        workspaceRoles:
          type: array
          uniqueItems: true
          items:
            type: string
        subjectLinks:
          uniqueItems: true
          maxItems: 3
          type: array
          items:
            $ref: '#/components/schemas/EximSubjectLink'
        imageUrls:
          uniqueItems: true
          type: array
          items:
            type: string
        menu:
          $ref: '#/components/schemas/MenuSnapshot'
    EximWorkspaceAddress:
      type: object
      properties:
        street:
          type: string
        streetNo:
          type: string
        city:
          type: string
        country:
          type: string
        postalCode:
          type: string
    EximSubjectLink:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
    MenuSnapshot:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        menu:
          $ref: '#/components/schemas/EximMenuStructure'
    EximMenuStructure:
      type: object
      properties:
        menuItems:
          type: array
          items:
            $ref: '#/components/schemas/EximWorkspaceMenuItem'
    EximWorkspaceMenuItem:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        workspaceName:
          type: string
        applicationId:
          type: string
        disabled:
          type: boolean
        position:
          format: int32
          type: integer
        permission:
          type: string
        badge:
          type: string
        scope:
          $ref: '#/components/schemas/EximScope'
        workspaceExit:
          type: boolean
        i18n:
          type: object
          additionalProperties:
            type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/EximWorkspaceMenuItem'
    EximScope:
      enum:
        - WORKSPACE
        - APP
        - PAGE
      type: string
    ExportWorkspacesRequest:
      type: object
      properties:
        names:
          type: array
          uniqueItems: true
          items:
            type: string
        includeMenus:
          type: boolean
          default: false
    Scope:
      enum:
        - WORKSPACE
        - APP
        - PAGE
      type: string
    PagingResponse:
      type: object
      properties:
        totalElements:
          format: int64
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
    ValidationConstraint:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
  parameters:
    pageNumber:
      in: query
      name: pageNumber
      required: false
      schema:
        type: integer
        format: int32
        default: 0
    pageSize:
      in: query
      name: pageSize
      required: false
      schema:
        type: integer
        format: int32
        default: 100
    id:
      in: path
      name: id
      required: true
      schema:
        type: string
    workspaceName:
      in: path
      name: workspaceName
      required: true
      schema:
        type: string
    menuItemId:
      in: path
      name: menuItemId
      required: true
      schema:
        type: string
    productId:
      in: path
      name: productId
      required: true
      schema:
        type: string